# code: language=ansible
---
- name: Clone oh-my-zsh
  become: true
  become_user: '{{ user.name }}'
  ansible.builtin.git:
    repo: '{{ upstream.repository }}'
    dest: '~{{ user.name }}/.oh-my-zsh'
    depth: 1
    version: '{{ upstream.revision }}'
  when: upstream.manage
  register: updated_main_repo

# - name: Set permissions of oh-my-zsh
#   become: true
#   ansible.builtin.file:
#     path: '~{{ user.name }}/.oh-my-zsh'
#     # Prevent the cloned repository from having insecure permissions. Failing to do
#     # so causes compinit() calls to fail with "command not found: compdef" errors
#     # for users with insecure umasks (e.g., "002", allowing group writability).
#     mode: 'go-w'
#     recurse: true

- name: Set default user shell to zsh
  become: true
  ansible.builtin.user:
    name: '{{ user.name }}'
    shell: '{{ shell_paths.zsh }}'
  when: user.set_shell

- name: 'Copy zshrc.zsh-template to .zshrc for user: {{ user.name }}'
  become: true
  become_user: '{{ user.name }}'
  ansible.builtin.copy:
    src: '~{{ user.name }}/.oh-my-zsh/templates/zshrc.zsh-template'
    dest: '~{{ user.name }}/.zshrc'
    remote_src: true
    mode: 'u=rw,go=r'
    backup: '{{ user.backup.zshrc }}'
  when: updated_main_repo.changed and user.refresh.zshrc

- name: Find previous backups of .zshrc
  become: true
  ansible.builtin.shell:
    cmd: 'ls -1tr .zshrc.[0-9]* || true'
    chdir: '~{{ user.name }}'
  changed_when: false
  register: backups_to_clean

- name: Delete previous backups of .zshrc
  ansible.builtin.file:
    path: '~{{ user.name }}/{{ item }}'
    state: absent
  with_items: >-
    {{
      backups_to_clean.stdout_lines[:-(user.backup.keep_last_count)]
    }}


- name: Enable refresh frequency in .zshrc
  ansible.builtin.include_tasks: subtasks/enable_zshrc_refresh_frequency.yml
  vars:
    username: '{{ user.name }}'
    refresh_frequency: '{{ user.refresh.frequency }}'
  when: user.refresh.frequency != oh_my_zsh_refresh_frequency

- name: Disable refresh frequency in .zshrc
  ansible.builtin.include_tasks: subtasks/disable_zshrc_refresh_frequency.yml
  vars:
    username: '{{ user.name }}'
    refresh_frequency: '{{ oh_my_zsh_refresh_frequency }}'
  when: user.refresh.frequency == oh_my_zsh_refresh_frequency

- name: Enable refresh mode in .zshrc
  ansible.builtin.include_tasks: subtasks/enable_zshrc_refresh_mode.yml
  vars:
    username: '{{ user.name }}'
    refresh_mode: '{{ user.refresh.mode }}'

- name: Disable other refresh modes in .zshrc
  ansible.builtin.include_tasks: subtasks/disable_zshrc_refresh_mode.yml
  vars:
    username: '{{ user.name }}'
    refresh_mode: '{{ mode }}'
  loop: '{{ oh_my_zsh_refresh_modes | difference([user.refresh.mode]) }}'
  loop_control:
    loop_var: mode
