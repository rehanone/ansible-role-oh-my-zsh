# code: language=ansible
---
- name: Clone oh-my-zsh
  become: true
  become_user: "{{ user.name }}"
  ansible.builtin.git:
    repo: "{{ oh_my_zsh_source }}"
    dest: "~{{ user.name }}/.oh-my-zsh"
    depth: 1
  register: updated_main_repo

- name: Set permissions of oh-my-zsh
  become: true
  ansible.builtin.file:
    path: "~{{ user.name }}/.oh-my-zsh"
    # Prevent the cloned repository from having insecure permissions. Failing to do
    # so causes compinit() calls to fail with "command not found: compdef" errors
    # for users with insecure umasks (e.g., "002", allowing group writability).
    mode: 'go-w'
    recurse: true

- name: Set default shell
  become: true
  ansible.builtin.user:
    name: "{{ user.name }}"
    shell: "{{ oh_my_zsh_zsh_path }}"
  when: oh_my_zsh.set_shell | default(oh_my_zsh_set_shell) | bool

- name: "Copy ~{{ user.name }}/.oh-my-zsh/templates/zshrc.zsh-template to ~{{ user.name }}/.zshrc"
  become: true
  become_user: "{{ user.name }}"
  ansible.builtin.copy:
    src: "~{{ user.name }}/.oh-my-zsh/templates/zshrc.zsh-template"
    dest: "~{{ user.name }}/.zshrc"
    remote_src: yes
    mode: 'u=rw,go=r'
    backup: true
  when: updated_main_repo.changed and (oh_my_zsh.update_zshrc | default(oh_my_zsh_update_zshrc) | bool)

- name: Enable update frequency in .zshrc
  ansible.builtin.include_tasks: subtasks/enable_zshrc_update_frequency.yml
  vars:
    username: '{{ user.name }}'
    update_frequency: '{{ oh_my_zsh.update_frequency | default(oh_my_zsh_update_frequency) | int }}'
  when: (oh_my_zsh.update_frequency | default(oh_my_zsh_update_frequency) | int) != oh_my_zsh_update_frequency

- name: Disable update frequency in .zshrc
  ansible.builtin.include_tasks: subtasks/disable_zshrc_update_frequency.yml
  vars:
    username: '{{ user.name }}'
    update_frequency: '{{ oh_my_zsh_update_frequency }}'
  when: (oh_my_zsh.update_frequency | default(oh_my_zsh_update_frequency) | int) == oh_my_zsh_update_frequency

- name: Enable update mode in .zshrc
  ansible.builtin.include_tasks: subtasks/enable_zshrc_update_mode.yml
  vars:
    username: '{{ user.name }}'
    update_mode: '{{ oh_my_zsh.update_mode | default(oh_my_zsh_update_mode) }}'

- name: Disable other update modes in .zshrc
  ansible.builtin.include_tasks: subtasks/disable_zshrc_update_mode.yml
  vars:
    username: '{{ user.name }}'
    update_mode: '{{ mode }}'
  loop: '{{ oh_my_zsh_update_modes | difference(oh_my_zsh.update_mode | default(oh_my_zsh_update_mode) | string) }}'
  loop_control:
    loop_var: mode
